----- BEGIN CREV PROOF -----
kind: package review
version: -1
date: 2021-09-15T20:18:58.987805600+02:00
from:
  id-type: crev
  id: xANVwAewKqhrUsYZNRN5FTEXaMuzekyaaOTxqLVQ2R0
  url: https://github.com/bestia-dev/crev-proofs
package:
  source: https://crates.io
  name: wsl_open_browser
  version: 2021.823.702
  revision: f72d86b8f7d49c19ff76fa4e9483fc1fe85097e4
  digest: Q-zHFkiqtRM5vx1SpV6l72OaEUi7SUJuF_VEXMdSCxI
review:
  thoroughness: high
  understanding: high
  rating: strong
comment: |-
  
  I am the author of this crate.  
  
  wsl_open_browser just opens the browser from inside WSL2.  
  
  The trick is, that it transforms file path from Linux to Windows notation.  
  
  Very useful for `cargo doc --open`.
  
  
  
  malicious potential: 0%    
  
  process::command:1  
  
  line of code:45 dependencies:1  
  
  NONE: unsafe, FFI, asm!, file-read, file-write, no_mangle, network-access, build.rs, macro_rules, proc_macro
  
  used in projects: use in `bash` and for `cargo doc --open`  
----- SIGN CREV PROOF -----
biFT1yhFfa_GK8wkirTRevTXFfeo5-0FOIF_q70-paE7PjpXyhd-m0r3z8gjM_vHhKKze15c9GnCKfVajVb9DQ
----- END CREV PROOF -----

----- BEGIN CREV PROOF -----
kind: package review
version: -1
date: 2021-09-15T20:18:58.987805600+02:00
from:
  id-type: crev
  id: xANVwAewKqhrUsYZNRN5FTEXaMuzekyaaOTxqLVQ2R0
  url: https://github.com/bestia-dev/crev-proofs
package:
  source: https://crates.io
  name: wsl_open_browser
  version: 2021.823.702
  revision: f72d86b8f7d49c19ff76fa4e9483fc1fe85097e4
  digest: Q-zHFkiqtRM5vx1SpV6l72OaEUi7SUJuF_VEXMdSCxI
review:
  thoroughness: high
  understanding: high
  rating: strong
comment: |-
  I am the author of this crate.  
  wsl_open_browser just opens the browser from inside WSL2.  
  The trick is, that it transforms file path from Linux to Windows notation.  
  Very useful for `cargo doc --open`.
  
  malicious potential: 0%    
  process::command:1  
  line of code:45 dependencies:1  
  NONE: unsafe, FFI, asm!, file-read, file-write, no_mangle, network-access, build.rs, macro_rules, proc_macro
  used in projects: use in `bash` and for `cargo doc --open`  
----- SIGN CREV PROOF -----
_hZ6r-p3irogGZgxzU1HhMC_DrQr1MVZAnj5KNp-zHa51iMNOWWpXsGWSkhVN4bTGGwULN2E830DR4ZuqgJoDg
----- END CREV PROOF -----

----- BEGIN CREV PROOF -----
kind: package review
version: -1
date: 2021-09-15T20:19:22.350397900+02:00
from:
  id-type: crev
  id: xANVwAewKqhrUsYZNRN5FTEXaMuzekyaaOTxqLVQ2R0
  url: https://github.com/bestia-dev/crev-proofs
package:
  source: https://crates.io
  name: unwrap
  version: 1.2.1
  digest: 6fQ98em_PhKjvLEzy38J-toIU7WaSF2WFDa2ZV0PV9w
review:
  thoroughness: high
  understanding: high
  rating: strong
comment: |-
  Adds the trait `VerboseUnwrap` to `Result` and `Option`.  
  Adds the macro `unwrap!` that writes the filename, line and column of the position in code where the panic happened. Very useful.  
  Because the original `unwrap()` in wasm returns totally unuseful location inside licore ?!?!: `panicked at... src/libcore/option.rs:378:21`.  
    
  malicious potential: 0%  
  macro_rules:2
  line of code:158 dependencies:0
  NONE: unsafe, FFI, asm!, file-read, file-write, no_mangle, network-access, build.rs, proc_macro, process::command,   
  owners (in crates.io) reputation: `canndrew` (unknown to me)  
  used in projects: all my projects  
  alternative crates explored: original unwrap() and expect()
----- SIGN CREV PROOF -----
Byuuc8-DeFPG09EhHgOYFBW7w70gMIyf8n90h4sN_gMINMseVbmCXV7F_JuwgkWxhfeHQ5_7tvg0-1ELFCSkCg
----- END CREV PROOF -----

----- BEGIN CREV PROOF -----
kind: package review
version: -1
date: 2021-09-15T20:19:45.428804+02:00
from:
  id-type: crev
  id: xANVwAewKqhrUsYZNRN5FTEXaMuzekyaaOTxqLVQ2R0
  url: https://github.com/bestia-dev/crev-proofs
package:
  source: https://crates.io
  name: cargo-auto
  version: 2021.827.848
  revision: 0914904a54b6bb0da0bbc621a23ca92914b2c16d
  digest: 7Bc7M4nZMgLl8sbWFBWTlCX_tTX671X3QFo9ZhgdXws
review:
  thoroughness: high
  understanding: high
  rating: strong
comment: |-
  I am the author of this crate.  
  `Cargo auto` subcommand manages the automation_tasks_rs sub-project.  
  It generates, builds and runs automation_tasks_rs.  
    
  malicious potential: 0%  
  process::command:4 (cargo and automation_tasks_rs)  
  file-read/write: only the `automation_tasks_rs` directory
  line of code:210 dependencies:6  
  NONE: unsafe, FFI, asm!, no_mangle, network-access, build.rs, macro_rules, proc_macro   
  used in projects: every rust project automation  
  alternative crates explored: cargo-make, cargo-task, cargo-xtask, make, bash scripts,...  
----- SIGN CREV PROOF -----
MSBpX7GfoNx6Vbt42e6FhsN8J_K74UWHWahA2TYD8dLSBp23cuM7wtCUkquV8fpE1Du6ZIe0wggmSLvMNecGDg
----- END CREV PROOF -----

----- BEGIN CREV PROOF -----
kind: package review
version: -1
date: 2021-09-15T20:33:49.630875100+02:00
from:
  id-type: crev
  id: xANVwAewKqhrUsYZNRN5FTEXaMuzekyaaOTxqLVQ2R0
  url: https://github.com/bestia-dev/crev-proofs
package:
  source: https://crates.io
  name: wasm-bindgen-test
  version: 0.3.26
  digest: ZoQq4VZqHWJy10g5Mq3RUyNZ9meYb2pW3MAJ8Gq4u9w
review:
  thoroughness: none
  understanding: none
  rating: positive
comment: |-
  BASIC LIBRARY
  
  wasm-bindgen-test is the basic crate for rust + wasm.
  I trust it just like I trust the Rust standard library or the rust compiler.
  I didn't review the source code.
  
  Published to crates.io by: alexcrichton
  Super high reputation and visibility in the rust community.
  https://web.crev.dev/rust-reviews/people_of_rust/
----- SIGN CREV PROOF -----
KJjgsPRixjZpKLleK3pS9AA03rA8h7Eh7kHJwIKzGvlO6V_rU54NUgrcdqZwgVsGCRU8-oT6AxV9oOzy7DfpCg
----- END CREV PROOF -----

----- BEGIN CREV PROOF -----
kind: package review
version: -1
date: 2021-09-15T20:34:12.530307800+02:00
from:
  id-type: crev
  id: xANVwAewKqhrUsYZNRN5FTEXaMuzekyaaOTxqLVQ2R0
  url: https://github.com/bestia-dev/crev-proofs
package:
  source: https://crates.io
  name: wasm-bindgen-test-macro
  version: 0.3.26
  digest: TOuhk6w9T5Jv6SAosiuOQ2i_6VgrmmoUd3kLKsDwLuM
review:
  thoroughness: none
  understanding: none
  rating: positive
comment: |-
  BASIC LIBRARY
  
  wasm-bindgen-test-macro is the basic crate for rust + wasm.
  I trust it just like I trust the Rust standard library or the rust compiler.
  I didn't review the source code.
  
  Published to crates.io by: alexcrichton
  Super high reputation and visibility in the rust community.
  https://web.crev.dev/rust-reviews/people_of_rust/
----- SIGN CREV PROOF -----
Po24rS3rMlGb5usIStnbRjoNMcKX7dlJgo4wT-dvLb3hmD8rZjkgo_kPJwQ1RrNQ0e9Qh__CmO7TQQJd5bsZBg
----- END CREV PROOF -----

